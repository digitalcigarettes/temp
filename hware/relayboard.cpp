#include <iostream>
#include <Windows.h>
#include <stdio.h>
#include <conio.h>
#include <string.h>
#include <time.h>

using namespace std;

char port[] = "\\\\.\\COM3"; 

unsigned char dfBuffer[32][17] = {
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x30, 0x46, 0x46, 0x30, 0x30, 0x46, 0x45, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x46, 0x44, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x31, 0x46, 0x46, 0x30, 0x30, 0x46, 0x44, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x46, 0x43, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x32, 0x46, 0x46, 0x30, 0x30, 0x46, 0x43, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x32, 0x30, 0x30, 0x30, 0x30, 0x46, 0x42, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x33, 0x46, 0x46, 0x30, 0x30, 0x46, 0x42, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x33, 0x30, 0x30, 0x30, 0x30, 0x46, 0x41, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x34, 0x46, 0x46, 0x30, 0x30, 0x46, 0x41, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x34, 0x30, 0x30, 0x30, 0x30, 0x46, 0x39, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x35, 0x46, 0x46, 0x30, 0x30, 0x46, 0x39, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x35, 0x30, 0x30, 0x30, 0x30, 0x46, 0x38, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x36, 0x46, 0x46, 0x30, 0x30, 0x46, 0x38, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x36, 0x30, 0x30, 0x30, 0x30, 0x46, 0x37, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x37, 0x46, 0x46, 0x30, 0x30, 0x46, 0x37, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x37, 0x30, 0x30, 0x30, 0x30, 0x46, 0x36, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x38, 0x46, 0x46, 0x30, 0x30, 0x46, 0x36, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x38, 0x30, 0x30, 0x30, 0x30, 0x46, 0x35, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x39, 0x46, 0x46, 0x30, 0x30, 0x46, 0x35, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x39, 0x30, 0x30, 0x30, 0x30, 0x46, 0x34, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x41, 0x46, 0x46, 0x30, 0x30, 0x46, 0x34, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x41, 0x30, 0x30, 0x30, 0x30, 0x46, 0x33, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x42, 0x46, 0x46, 0x30, 0x30, 0x46, 0x33, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x42, 0x30, 0x30, 0x30, 0x30, 0x46, 0x32, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x43, 0x46, 0x46, 0x30, 0x30, 0x46, 0x32, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x43, 0x30, 0x30, 0x30, 0x30, 0x46, 0x31, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x44, 0x46, 0x46, 0x30, 0x30, 0x46, 0x31, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x44, 0x30, 0x30, 0x30, 0x30, 0x46, 0x30, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x45, 0x46, 0x46, 0x30, 0x30, 0x46, 0x30, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x45, 0x30, 0x30, 0x30, 0x30, 0x46, 0x46, 0x0D, 0x0A},
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x46, 0x46, 0x46, 0x30, 0x30, 0x46, 0x46, 0x0D, 0x0A}, 
    {0x3A, 0x46, 0x45, 0x30, 0x35, 0x30, 0x30, 0x30, 0x46, 0x30, 0x30, 0x30, 0x30, 0x46, 0x45, 0x0D, 0x0A}
};

int RelaySwitch(HANDLE hCOM, char* lpBuffer);

void delay(int milli_seconds)
{
  
    clock_t start_time = clock();
  
    while (clock() < start_time + milli_seconds)
    ;
}


int main(void)
{

    int time_in_milliseconds = 100;

    HANDLE hCOM;                       
    
    BOOL Status;

    hCOM = CreateFile(port,                          
                       GENERIC_READ | GENERIC_WRITE, 
                       0,                            
                       NULL,                         
                       OPEN_EXISTING,                
                       0,                            
                       NULL
    );                        

    if (hCOM == INVALID_HANDLE_VALUE)
        printf("\n   Error! - Port %s can't be opened", port);
    else
        printf("\n   Port %s Opened\n ", port);

   

    DCB SerialController = {0};
    SerialController.DCBlength = sizeof(SerialController);

    Status = GetCommState(hCOM, &SerialController); 

    if (Status == FALSE)
    {
        printf("\n   Error! in GetCommState()");
    }

    SerialController.BaudRate = CBR_9600;   
    SerialController.ByteSize = 8;          
    SerialController.StopBits = ONESTOPBIT; 
    SerialController.Parity = NOPARITY;     

    Status = SetCommState(hCOM, &SerialController); 

    if (Status == FALSE)
    {
        printf("\n   Error! in Setting DCB Structure");
    }else
    {
        printf("\n   Setting DCB Structure Successfull\n");
        printf("\n       Baudrate = %d", SerialController.BaudRate);
        printf("\n       ByteSize = %d", SerialController.ByteSize);
        printf("\n       StopBits = %d", SerialController.StopBits);
        printf("\n       Parity   = %d", SerialController.Parity);
    }

    COMMTIMEOUTS Tout = {0};

    Tout.ReadIntervalTimeout = 50;
    Tout.ReadTotalTimeoutConstant = 50;
    Tout.ReadTotalTimeoutMultiplier = 10;
    Tout.WriteTotalTimeoutConstant = 50;
    Tout.WriteTotalTimeoutMultiplier = 10;

    if (SetCommTimeouts(hCOM, &Tout) == FALSE)
        printf("\n   Error! in Setting Time Outs");
    else
        printf("\n\n   Setting Serial Port Timeouts Successfull");


   
    printf("debug\n");
    for(int i=0; i<32; i++){
        if(i%2==0){
            unsigned char *lpBuffer = dfBuffer[i];
            RelaySwitch(hCOM, lpBuffer);
            delay(time_in_milliseconds);
        }
    }


    for(int i=0; i<32; i++){
        if(i%2==1){
            unsigned char *lpBuffer = dfBuffer[i];
            RelaySwitch(hCOM, lpBuffer);
            delay(time_in_milliseconds);
        }
    }


    CloseHandle(hCOM); 
    getch();
    return 0;
}

int RelaySwitch(HANDLE hCOM, char* lpBuffer){
    BOOL Status;
    
	int i;

	for(i=0;i<17;i++){        
	    
        DWORD dNoOfBytesWritten = 0;

        char buffer = lpBuffer[i];

        Status = WriteFile(hCOM,     
                        &buffer,           
                        1,  
                        &dNoOfBytesWritten, 
                        NULL);

        
        if (Status == TRUE)
            printf("Written[%02X] to %s \n", lpBuffer[i], port);
        else
            printf("Error %d in Writing to Serial Port\n", GetLastError());

    }

    return 0;

}
